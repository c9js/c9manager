#▄──────────────────────────────────────────▄1.0.36
#█                                          █
#█  Путь к каталогу где расположен скрипт,  █
#█  который загрузил эту библиотеку         █
#█                                          █
#▀──────────────────────────────────────────▀
C9_PATH=$(dirname $0)

#▄──────────────────────────────────────────▄
#█                                          █
#█  Переопределяем сочетание клавиш Ctrl+C  █
#█                                          █
#▀──────────────────────────────────────────▀
ctrl_c() {
    reset # Очистка экрана
    exit # Завершение процесса
}
trap ctrl_c 2

#▄────────▄
#█        █
#█  Base  █
#█        █
#▀────────▀
#┌──────────────────────────┐
#│ Переводит строку в число │
#└──────────────────────────┘
number() {
    printf '%d' "$1" 2> '/dev/null'
}

#┌───────────────────────────────────────┐
#│ Экранирует все спец. символы в строке │
#└───────────────────────────────────────┘
escape() {
    printf '%q' "$1" 2> '/dev/null'
}

#┌──────────────────────┐
#│ Выводит символ N раз │
#│ Пример: char 3 'abс' │
#│ Результат: abсabсabс │
#└──────────────────────┘
char() {
    local i
    for ((i = 0; i < "$1"; i++)); do printf "$2"; done
}

#▄─────────────▄
#█             █
#█  Валидация  █
#█             █
#▀─────────────▀
#┌─────────────────────────────────────────┐
#│ Проверяет верно-ли указан порт          │
#│ • Диапазон от 1 до 65536 (включительно) │
#└─────────────────────────────────────────┘
isValidPort() {
    [[ ! "$1" =~ ^[0-9]*[0-9]$ ]] && return 1
    (( "$1" > 0 && "$1" < 65537 ))
}

#┌────────────────────────────────────────────┐
#│ Проверяет верно-ли указано имя юзера       │
#│ • Длина от 2 до 39 символов (включительно) │
#│ • Символы [a-zA-Z0-9], и тире "-"          │
#│ • Тире не допускается в начале и в конце   │
#└────────────────────────────────────────────┘
isValidUsername() {
    (( ${#1} > 39 )) && return 1
    [[ "$1" =~ ^[a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9]+$ ]]
}
