#▄──────────▄1.0.1
#█          █
#█  Docker  █
#█          █
#▀──────────▀
#┌─────────────────────────────────────────────────┐
#│ Проверяет существуют-ли образы,                 │
#│ далее добавляет найденые ID в массив $GLOBAL_ID │
#│ is_image "$IMAGE_RUN"                           │
#└─────────────────────────────────────────────────┘
is_image() {
# Получаем ID образов
    GLOBAL_ID=$(docker images -aq "$1" 2>&1)
    
# Переводим в массив
    GLOBAL_ID=($GLOBAL_ID)
    
# Массив пуст
    if (( ${#GLOBAL_ID[*]} == 0 )); then
        return 1
    fi
    
# Локальные переменные
    local id
    
# Проходим по списку ID-образов
    for id in "${GLOBAL_ID[@]}"; do
    # Проверяем длину ID
        if (( ${#id} != 12 )); then
            return 1
        fi
    done
    
# Образы существуют
    return 0
}

#┌─────────────────────────────────────────────────┐
#│ Проверяет существуют-ли контейнеры,             │
#│ далее добавляет найденые ID в массив $GLOBAL_ID │
#│ is_container "ancestor=$IMAGE_RUN"              │
#│ is_container "name=$IMAGE_RUN"                  │
#└─────────────────────────────────────────────────┘
is_container() {
# Локальные переменные
    local ids
    local id
    
# Создаем массив
    GLOBAL_ID=()
    
# Получаем ID контейнеров
    ids=$(docker ps -aq --filter "$1" 2>&1)
    
# Переводим в массив
    for id in $ids; do
    # Проверяем длину ID
        if (( ${#id} != 12 )); then
            return 1
        fi
        
    # Нельзя останавливать текущий контейнер
        if [[ "$HOSTNAME" != "$id" ]]; then
            GLOBAL_ID+=("$id")
        fi
    done
    
# Массив пуст
    if (( ${#GLOBAL_ID[*]} == 0 )); then
        return 1
    fi
    
# Контейнеры существуют
    return 0
}

#┌───────────────────────────────────────────────────────────────────┐
#│ Получает список ID-образов                                        │
#│ getImageIDs — Получить список всех ID-образов                     │
#│ getImageIDs "${IMAGES[@]}" — Получить список выбранных ID-образов │
#└───────────────────────────────────────────────────────────────────┘
getImageIDs() {
# Создаем список ID-образов
    imageIDs=()
    
# Проходим по списку всех ID-образов
    if (( $# == 1 )); then
    # Поиск образов
        $1 \
            'Поиск образов...'
            
    # Получаем ID-образов
        is_image
        
    # Добавляем ID-образов в список
        imageIDs+=("${GLOBAL_ID[@]}")
        return
    fi
    
# Локальные переменные
    local i
    
# Проходим по списку выбранных ID-образов
    for ((i = 2; i <= $#; i++)); do
    # Поиск образов
        $1 \
            'Поиск образов' $(($i-2)) $(($#-1))
            
    # Получаем ID-образов
        is_image "${!i}"
        
    # Добавляем ID-образов в список
        imageIDs+=("${GLOBAL_ID[@]}")
    done
}

#┌─────────────────────────────────────────────────────────────────────────────┐
#│ Получает список ID-контейнеров                                              │
#│ getContainerIDs — Получить список всех ID-контейнеров                       │
#│ getContainerIDs "${imageIDs[@]}" — Получить список выбранных ID-контейнеров │
#└─────────────────────────────────────────────────────────────────────────────┘
getContainerIDs() {
# Создаем список ID-контейнеров
    containerIDs=()
    
# Проходим по списку всех ID-контейнеров
    if (( $# == 1 )); then
    # Проверка всех образов
        $1 \
            'Проверка всех образов...'
            
    # Получаем ID-контейнеров
        is_container
        
    # Добавляем ID-контейнеров в список
        containerIDs+=("${GLOBAL_ID[@]}")
        return
    fi
    
# Локальные переменные
    local i
    
# Проходим по списку выбранных ID-контейнеров
    for ((i = 2; i <= $#; i++)); do
    # Проверка образов
        $1 \
            'Проверка образов' $(($i-2)) $(($#-1))
            
    # Получаем ID-контейнеров
        is_container "ancestor=${!i}"
        
    # Добавляем ID-контейнеров в список
        containerIDs+=("${GLOBAL_ID[@]}")
    done
}
