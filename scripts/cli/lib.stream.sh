#▄──────────▄1.0.5
#█          █
#█  Stream  █
#█          █
#▀──────────▀
#┌────────────────────────────────┐
#│ Пустой стрим                   │
#│ • Выполняет переданную команду │
#└────────────────────────────────┘
stream:Void() {
# Выполняем переданную команду
    "$@"
    
# Команда выполнена успешно
    [[ $? != 0 ]]
}

#┌───────────────────────────────────────────┐
#│ Потоковый стрим                           │
#│ • Выполняет переданную команду            │
#│ • Сохраняет stderr в переменную ERROR_LOG │
#└───────────────────────────────────────────┘
stream() {
# Сохраняем вывод команды $@ в перемнную
    RES="$("$@" 2>&1 | tee /dev/tty; exit ${PIPESTATUS[0]})"
    
# Сохраняем код выхода
    local code_exit="$?"
    
# Обнуляем перемнную с логом ошибок
    ERROR_LOG=''
    
# Команда не была выполнена
    if [[ $code_exit != 0 ]]; then
    # Обновляем перемнную с логом ошибок
        ERROR_LOG="$RES"
        
    # Выходим с ошибкой
        return 0
    fi
    
# Команда выполнена успешно
    return 1
}

#┌───────────────────────────────────────────┐
#│ Обычный стрим                             │
#│ • Выполняет переданную команду            │
#│ • Сохраняет stderr в переменную ERROR_LOG │
#│ • Сохраняет stdout в переменную RES       │
#└───────────────────────────────────────────┘
RUN() {
# Локальные переменные
    local res
    
# Обнуляем глобальные перемнные
    ERROR_LOG='' # Лог ошибок
    RES=''       # Результат
    
# Выполняем переданную команду
    if res=$("$@" 2>&1); then
    # Сохраняем результат в перемнную
        RES="$res"
        
    # Команда выполнена успешно
        return 1
    fi
    
# Сохраняем в перемнную с логом ошибок
    ERROR_LOG="$res"
    
# Выходим с ошибкой
    return 0
}
