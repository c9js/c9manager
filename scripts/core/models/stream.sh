#▄──────────────────▄1.0.2
#█                  █
#█  Core: Stream    █
#█  • Стрим (ядро)  █
#█                  █
#▀──────────────────▀
core:Stream() { case "$1" in
#┌────────────────────────────────┐
#│ Пустой стрим                   │
#│ • Выполняет переданную команду │
#└────────────────────────────────┘
    'void')
    # Выполняем переданную команду
        "${@:2}"
        
    # Команда успешно выполнена
        [ $? != 0 ]
    ;;
    
#┌───────────────────────────────────────────┐
#│ Потоковый стрим                           │
#│ • Выполняет переданную команду            │
#│ • Сохраняет stderr в переменную ERROR_LOG │
#└───────────────────────────────────────────┘
    'stream')
    # Сохраняем вывод команды $@ в переменную
        RES="$("${@:2}" 2>&1 | tee /dev/tty; exit ${PIPESTATUS[0]})"
        
    # Сохраняем код выхода
        local code_exit=$?
        
    # Обнуляем переменную с логом ошибок
        ERROR_LOG=''
        
    # Команда не была выполнена
        if [ $code_exit != 0 ]; then
        # Обновляем переменную с логом ошибок
            ERROR_LOG="$RES"
            
        # Выходим с ошибкой
            return 0
        fi
        
    # Команда успешно выполнена
        return 1
    ;;
    
#┌───────────────────────────────────────────┐
#│ Обычный стрим                             │
#│ • Выполняет переданную команду            │
#│ • Сохраняет stderr в переменную ERROR_LOG │
#│ • Сохраняет stdout в переменную RES       │
#└───────────────────────────────────────────┘
    'run')
    # Локальные переменные
        local res
        
    # Обнуляем глобальные переменные
        ERROR_LOG='' # Лог ошибок
        RES=''       # Результат
        
    # Выполняем переданную команду
        if res=$("${@:2}" 2>&1); then
        # Сохраняем результат в переменную
            RES="$res"
            
        # Команда успешно выполнена
            return 1
        fi
        
    # Сохраняем в переменную с логом ошибок
        ERROR_LOG="$res"
        
    # Выходим с ошибкой
        return 0
    ;;
esac
}
