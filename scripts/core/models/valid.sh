#▄──────────────────────▄1.0.2
#█                      █
#█  Core: Valid         █
#█  • Валидация (ядро)  █
#█                      █
#▀──────────────────────▀
core:Valid() { case "$1" in
#┌───────────────────────────────────┐
#│ Проверяет верно-ли указана версия │
#│ • Формат XXX.XXX.XXX              │
#└───────────────────────────────────┘
    'isValidVersion')
        [[ "$2" =~ ^[0-9]+.[0-9]+.[0-9]+$ ]]
    ;;
    
#┌─────────────────────────────────────────┐
#│ Проверяет верно-ли указан порт          │
#│ • Диапазон от 1 до 65536 (включительно) │
#└─────────────────────────────────────────┘
    'isValidPort')
        [[ ! "$2" =~ ^[0-9]*$ ]] && return 1
        (( "$2" > 0 && "$2" < 65537 ))
    ;;
    
#┌──────────────────────────────────────────────┐
#│ Проверяет верно-ли указано количество портов │
#│ • Диапазон от 0 до 20 (включительно)         │
#└──────────────────────────────────────────────┘
    'isValidPortsCount')
        [[ ! "$2" =~ ^[0-9]*$ ]] && return 1
        (( "$2" <= 20 ))
    ;;
    
#┌─────────────────────────────────────────────┐
#│ Проверяет верно-ли указано описание коммита │
#│ • Длина от 1 символа (включительно)         │
#└─────────────────────────────────────────────┘
    'git:isValidMessage')
        (( ${#2} >= 1 ))
    ;;
    
#┌────────────────────────────────────────────┐
#│ Проверяет верно-ли указано имя git-юзера   │
#│ • Длина от 2 до 39 символов (включительно) │
#│ • Символы [a-zA-Z0-9] и тире "-"           │
#│ • Тире не допускается в начале и в конце   │
#└────────────────────────────────────────────┘
    'git:isValidUser')
        (( ${#2} > 39 )) && return 1
        [[ "$2" =~ ^[a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9]+$ ]]
    ;;
    
#┌────────────────────────────────────────────────┐
#│ Проверяет верно-ли указано имя git-репозитория │
#│ • Длина от 1 до 100 символов (включительно)    │
#│ • Символы [a-zA-Z0-9], тире "-" и подчерк "_"  │
#└────────────────────────────────────────────────┘
    'git:isValidRepo')
        (( ${#2} > 100 )) && return 1
        [[ "$2" =~ ^[a-zA-Z0-9_-]*[a-zA-Z0-9_-]$ ]]
    ;;
    
#┌───────────────────────────────────────────────────────┐
#│ Проверяет верно-ли указан логин от docker-репозитория │
#│ • Длина от 4 до 30 символов (включительно)            │
#│ • Символы [a-zA-Z0-9]                                 │
#└───────────────────────────────────────────────────────┘
    'docker:isValidUser')
        (( ${#2} < 4 )) && return 1
        (( ${#2} > 30 )) && return 1
        [[ "$2" =~ ^[a-zA-Z0-9]*[a-zA-Z0-9]$ ]]
    ;;
    
#┌────────────────────────────────────────────────────────┐
#│ Проверяет верно-ли указан пароль от docker-репозитория │
#│ • Длина от 9 символов (включительно)                   │
#└────────────────────────────────────────────────────────┘
    'docker:isValidPass')
        (( ${#2} > 9 ))
    ;;
    
#┌────────────────────────────────────────────────────┐
#│ Проверяет верно-ли указано имя проекта             │
#│ • Длина от 2 до 39 символов (включительно)         │
#│ • Символы [a-zA-Z0-9], тире "-" и подчерк "_"      │
#│ • Тире и подчерк не допускается в начале и в конце │
#└────────────────────────────────────────────────────┘
    'isValidProject')
    # Список аргументов
        local project_name="$2" # Имя проекта
        
    # Имя проекта не должно быть
        local blocklist=(
            'apks'  'bin' 'dev' 'etc'  'home' 'lib'
            'media' 'mnt' 'opt' 'proc' 'root' 'run'
            'sbin'  'srv' 'sys' 'tmp'  'usr'  'var'
        )
        
    # Локальные переменные
        local block_name
        
    # Проходим по списку блокирующих слов
        for block_name in "${blocklist[@]}"; do
            [ "$project_name" == "$block_name" ] && return 1
        done
        
    # Длина от 1 до 39 символов (включительно)
        (( ${#2} > 39 )) && return 1
        
    # Символы [a-zA-Z0-9], тире "-" и подчерк "_"
        [[ "$2" =~ ^[a-zA-Z0-9][a-zA-Z0-9_-]*[a-zA-Z0-9]+$ ]]
    ;;
esac
}
