#▄───────────────────────────▄1.0.2
#█                           █
#█  Core: Pages              █
#█  • Список страниц (ядро)  █
#█                           █
#▀───────────────────────────▀
core:Pages() { case "$1" in
#┌──────────────────────────────────────────┐
#│ Возвращает количество получаемых пунктов │
#└──────────────────────────────────────────┘
    'count')
    # Список аргументов
        local max="$2" # Количество пунктов на странице
        
    # Возвращаем количество получаемых пунктов
        echo "$(($max + 1))"
    ;;
    
#┌───────────────────────────────────────────┐
#│ Возвращает количество пропущенных пунктов │
#└───────────────────────────────────────────┘
    'skip')
    # Список аргументов
        local max="$2" # Количество пунктов на странице
        
    # Возвращаем количество пропущенных пунктов
        echo "$(($max * $PAGES_PAGE))"
    ;;
    
#┌────────────────────────────────────────┐
#│ Возвращает пользователя обратно в меню │
#└────────────────────────────────────────┘
    'back')
    # Возвращаем пользователя обратно в меню
        core:Pages 'show' "$PAGES_PAGE" 0 "$PAGES_SELECT"
    ;;
    
#┌──────────────────────────────────────────────┐
#│ Выводит список пунктов (для выбранного меню) │
#└──────────────────────────────────────────────┘
    'menu')
    # Глобальные переменные
        PAGES_CLASS="${FUNCNAME[2]#*:}" # Имя функции родителя
        PAGES_MENU="$2"   # Выбранное меню
        PAGES_METHOD="$3" # Выбранный метод
        
    # Задаем метод по умолчанию
        [ -z "$PAGES_METHOD" ] && PAGES_METHOD='pages'
        
    # Выводим меню на экран
        core:Pages 'show'
    ;;
    
#┌───────────────────────┐
#│ Выводит меню на экран │
#└───────────────────────┘
    'show')
    # Обновляем номер страницы
        PAGES_PAGE="$(number "$2")"
        
    # Номер страницы не может быть меньше 0
        (( $PAGES_PAGE < 0 )) && PAGES_PAGE=0
        
    # Обновляем выбранный пункт (по умолчанию)
        PAGES_SELECT="$(number "$3")"
        
    # Обновляем выбранный пункт (выбранный ранее)
        PAGES_LAST_SELECT="$4"
        
    # Создаем список пунктов (для выбранного меню)
        "model:$PAGES_CLASS" "$PAGES_METHOD:Menu"
    ;;
    
#┌──────────────────────────────────────────────┐
#│ Создает список пунктов (для выбранного меню) │
#└──────────────────────────────────────────────┘
    'items')
    # Список аргументов
        local max="$2" # Количество пунктов на странице
        
    # Создаем список пунктов (для выбранного меню)
        local items=(
            "${@:3:$max}"
        )
        
    # Обнуляем ID-пункта вперед
        PAGES_NEXT=-1
        
    # Это не последняя страница
        if (( ${#items[*]}+2 != $# )); then
        # Обновляем ID-пункта вперед
            let PAGES_NEXT=${#items[*]}+1
        fi
        
    # Пункт по умолчанию не указан
        if (( $PAGES_SELECT == 0 && $PAGES_PAGE != 0 )); then
        # Обновляем пункт по умолчанию
            PAGES_SELECT=1
            
        # Следующая страница существует
            if [ $PAGES_NEXT != -1 ]; then
            # Обновляем пункт по умолчанию
                let PAGES_SELECT=$PAGES_NEXT+1
            fi
        fi
        
    # Следующая страница существует
        if (( $PAGES_NEXT != -1 && $PAGES_PAGE == 0 )); then
        # Обновляем пункт по умолчанию
            PAGES_SELECT=$PAGES_NEXT
        fi
        
    # Проверяем пункт (выбранный ранее)
        if [ -n "$PAGES_LAST_SELECT" ]; then
            PAGES_SELECT="$PAGES_LAST_SELECT"
        fi
        
    # Это не первая страница
        if [ $PAGES_PAGE != 0 ]; then
        # Добавляем кнопку назад
            items=(
                '←'
                "${items[@]}"
            )
        fi
        
    # Это не последняя страница
        if [ $PAGES_NEXT != -1 ]; then
        # Добавляем кнопку вперед
            items=(
                "${items[@]}"
                '→'
            )
        fi
        
    # Обнуляем сохраненные состояния пунктов (для выбранного меню)
        reset:Menu
        
    # Обновляем заголовок меню (для выбранного меню)
        navigator "$PAGES_METHOD:Header" "${items[@]}"
        
    # Выводим список пунктов (для выбранного меню)
        navigator "$PAGES_METHOD:Menu" "${items[@]}"
    ;;
    
#┌────────────────────────────────────────────────┐
#│ Обновляет заголовок меню (для выбранного меню) │
#└────────────────────────────────────────────────┘
    'header')
    # Сохраняем заголовок меню
        PAGES_HEADER="$2"
    ;;
    
#┌────────────────────────────────────────────────────┐
#│ Обрабатывает выбранный пункт (для выбранного меню) │
#└────────────────────────────────────────────────────┘
    'pick')
    # Сохраняем выбранный пункт
        PAGES_SELECT="$2"
        
    # Это не первая страница
        if [ $PAGES_PAGE != 0 ]; then
        # Выбран пункт "Назад"
            if [ $PAGES_SELECT == 1 ]; then
            # Уменьшаем номер страницы
                let PAGES_PAGE--
                
            # Переходим на предыдущую страницу
                core:Pages 'show' "$PAGES_PAGE" 1
            fi
            
        # Увеличиваем ID-пункта вперед
            let PAGES_NEXT++
        fi
        
    # Выбран пункт "Вперед"
        if [ $PAGES_SELECT == $PAGES_NEXT ]; then
        # Увеличиваем номер страницы
            let PAGES_PAGE++
            
        # Переходим на следующую страницу
            core:Pages 'show' "$PAGES_PAGE"
            return
        fi
        
    # Это первая страница
        if [ $PAGES_PAGE == 0 ]; then
        # Обновляем ID-массива
            let PAGES_ID=$PAGES_SELECT-1
            
        # Обрабатываем выбранный пункт (для выбранного меню)
            "model:$PAGES_CLASS" "$PAGES_METHOD:Pick" "$PAGES_ID" "$PAGES_MENU"
            
    # Это не первая страница
        else
        # Обновляем ID-массива
            let PAGES_ID=$PAGES_SELECT-2
            
        # Обрабатываем выбранный пункт (для выбранного меню)
            "model:$PAGES_CLASS" "$PAGES_METHOD:Pick" "$PAGES_ID" "$PAGES_MENU"
        fi
    ;;
esac
}
