#▄──────────────────────────────────────────────▄
#█                                              █
#█  Список команд для клонирования репозитория  █
#█                                              █
#▀──────────────────────────────────────────────▀
GIT_LIST=(
    'is_dir'        # Проверяет текущий каталог
    'void:cd'       # Переходит в рабочий каталог
    'clone'         # Клонирует репозиторий
    'void:checkout' # Перемещает указатель на версию образа
    'add_url'       # Добавляет новый URL-адрес
    'delete_url'    # Удаляет старый URL-адрес
)

#▄─────────────────────▄
#█                     █
#█  View: Git          █
#█  • Гит (интерфейс)  █
#█                     █
#▀─────────────────────▀
view:Git() { case "$1" in
#┌─────────────────────┐
#│ Обновляет заголовок │
#└─────────────────────┘
    'header')
        printf "Клонирование репозитория '%s'" "$GIT_URL/$GIT_USER/$GIT_REPO"
    ;;
    
#┌─────────────────────────────────────┐
#│ Обновляет текущее состояние команды │
#└─────────────────────────────────────┘
    'state') case "$2" in
        'is_dir')        log 'Проверяем текущий каталог...'             ;;
        'void:cd')       log 'Переходим в рабочий каталог...'           ;;
        'clone')         log 'Клонируем репозиторий...'                 ;;
        'void:checkout') log 'Перемещаем указатель на версию образа...' ;;
        'add_url')       log 'Добавляем новый URL-адрес...'             ;;
        'delete_url')    log 'Удаляем старый URL-адрес...'              ;;
    esac
    ;;
    
#┌─────────────────────────────┐
#│ Выводит сообщение об ошибке │
#└─────────────────────────────┘
    'error') case "$2" in
        'is_dir')        error 'Текущий каталог должен быть пуст!' "Путь: $P" ;;
        'void:cd')       error 'Переход в рабочий каталог не был выполнен!'   ;;
        'clone')         error 'Репозиторий не был склонирован!'              ;;
        'void:checkout') error 'Указатель не был перемещен на версию образа!' ;;
        'add_url')       error 'Новый URL-адрес не был добавлен!'             ;;
        'delete_url')    error 'Старый URL-адрес не был удален!'              ;;
    esac
    ;;
    
#┌──────────────────────────────────────────┐
#│ Выводит сообщение об успешном завершении │
#└──────────────────────────────────────────┘
    'success')
    # Проверяем существует-ли образ
        if ! controller:Docker 'no_image'; then
        # Выводим сообщение об успешном завершении
            success \
            'Локальный репозиторий успешно создан!' \
            "Путь: $P"
            
    # Образ не найден
        else
        # Выводим сообщение об успешном завершении
            success \
            'Локальный репозиторий успешно создан!' \
            "Путь: $P" \
            '' \
            "Далее необходимо установить '$IMAGE_START:$VERSION'" \
            "Нажмите 'Install'"
        fi
    ;;
esac
}
