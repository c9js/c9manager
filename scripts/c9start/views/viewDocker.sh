#▄───────────────────────────────────────────────────▄
#█                                                   █
#█  Список команд для поиска и удаления контейнеров  █
#█                                                   █
#▀───────────────────────────────────────────────────▀
CONTAINERS_REMOVE=(
    'void:search_images'     # Поиск ID-образов
    'void:search_containers' # Поиск ID-контейнеров
    'remove_containers'      # Удаление контейнеров
)

#▄───────────────────────────────────────────────▄
#█                                               █
#█  Список команд для поиска и удаления образов  █
#█                                               █
#▀───────────────────────────────────────────────▀
IMAGES_REMOVE=(
    "${CONTAINERS_REMOVE[@]}" # Поиск и удаление контейнеров
    'remove_images'           # Удаление образов
)

#▄──────────────────────────────────────────────────────▄
#█                                                      █
#█  Список команд для поиска и удаления старого образа  █
#█                                                      █
#▀──────────────────────────────────────────────────────▀
DELETE_LIST=(
    'check_image'         # Проверка имени образа
    "${IMAGES_REMOVE[@]}" # Поиск и удаление старого образа
)

#▄────────────────────────────────────────────▄
#█                                            █
#█  Список команд для создания нового образа  █
#█                                            █
#▀────────────────────────────────────────────▀
CREATE_LIST=(
    "${DELETE_LIST[@]}" # Поиск и удаление старого образа
    'copy_temp_files'   # Копирование временных файлов
    'build'             # Создание нового образа
    'remove_temp_files' # Удаление временных файлов
)

#▄──────────────────────────────────────────────────────────────▄
#█                                                              █
#█  Список команд для запуска нового контейнера (после сборки)  █
#█                                                              █
#▀──────────────────────────────────────────────────────────────▀
RUN_BUILD=(
    "${CREATE_LIST[@]}" # Создание нового образа
    'remove_ports'      # Удаление портов из списка
    'run'               # Запуск контейнера
    'void:get_ports'    # Получение списка портов
    'save_ports'        # Сохранение списка портов
    'save_ports_count'  # Сохранение количества дополнительных портов
    'save_image'        # Сохранение текущего образа
)

#▄──────────────────────────────────────────────────────────▄
#█                                                          █
#█  Список команд для поиска и удаления старого контейнера  █
#█                                                          █
#▀──────────────────────────────────────────────────────────▀
CONTAINER_REMOVE=(
    'void:search_container' # Поиск ID-контейнера
    'remove_containers'     # Удаление старого контейнера
)

#▄───────────────────────────────────────────────▄
#█                                               █
#█  Список команд для запуска нового контейнера  █
#█                                               █
#▀───────────────────────────────────────────────▀
RUN_LIST=(
    "${CONTAINER_REMOVE[@]}" # Поиск и удаление старого контейнера
    'void:search_image'      # Поиск ID-образа
    'download'               # Скачивание образа
    'remove_ports'           # Удаление портов из списка
    'run'                    # Запуск контейнера
    'void:get_ports'         # Получение списка портов
    'save_ports'             # Сохранение списка портов
    'save_ports_count'       # Сохранение количества дополнительных портов
    'save_image'             # Сохранение текущего образа
)

#▄───────────────────────▄
#█                       █
#█  View: Docker         █
#█  • Докер (интерфейс)  █
#█                       █
#▀───────────────────────▀
view:Docker() { case "$1" in
#┌─────────────────────┐
#│ Обновляет заголовок │
#└─────────────────────┘
    'header') case "$SELECTION" in
         4) printf "Создание образа '%s'"          "$IMAGE_NAME"             ;;
         5) printf "Удаление образа '%s'"          "$IMAGE_NAME"             ;;
         6) printf "Установка '%s'"                "$IMAGE_RUN"              ;;
         7) printf "Перезагрузка контейнера '%s'"  "$IMAGE_RUN"              ;;
         8) printf "Обновление контейнера до '%s'" "$IMAGE_RUN"              ;;
         9) printf "Запуск контейнера '%s'"        "$IMAGE_RUN"              ;;
        10) printf "Удаление контейнера '%s'"      "$RUN_IMAGE:$RUN_VERSION" ;;
        11) printf 'Удаление всех контейнеров'                               ;;
        12) printf 'Удаление всех образов'                                   ;;
    esac
    ;;
    
#┌────────────────────────────┐
#│ Обновляет текущий прогресс │
#└────────────────────────────┘
    'progress') case "$2" in
        'void:search_images')     log 'Найдено образов:     %d' '%b' ;;
        'void:search_containers') log 'Проверено образов:   %d' '%b' ;;
        'void:search_container')  log 'Найдено контейнеров: %d' '%b' ;;
        'remove_containers')      log 'Удалено контейнеров: %d' '%b' ;;
        'remove_images')          log 'Удалено образов:     %d' '%b' ;;
    esac
    ;;
    
#┌─────────────────────────────────────┐
#│ Обновляет текущее состояние команды │
#└─────────────────────────────────────┘
    'state') case "$2" in
        'check_image')        log 'Проверка имени образа...'        ;;
        'copy_temp_files')    log 'Копирование временных файлов...' ;;
        'build')              log 'Создание нового образа...'       ;;
        'remove_temp_files')  log 'Удаление временных файлов...'    ;;
        'void:search_image')  log 'Поиск образа...'                 ;;
        'download')           log 'Скачивание образа...'            ;;
        'remove_ports')       log 'Удаление портов из списка...'    ;;
        'run')                log 'Запуск контейнера...'            ;;
        'void:get_ports')     log 'Получение списка портов...'      ;;
        'save_ports')         log 'Сохранение списка портов...'     ;;
        'save_ports_count')   log 'Сохранение количества портов...' ;;
        'save_image')         log 'Сохранение текущего образа...'   ;;
    esac
    ;;
    
#┌─────────────────────────────┐
#│ Выводит сообщение об ошибке │
#└─────────────────────────────┘
    'error') case "$2" in
        'check_image')            error "Образ '$IMAGE_NAME' не найден!"       ;;
        'void:search_images')     error 'Поиск образов не был запущен!'        ;;
        'void:search_containers') error 'Проверка образов не была запущена!'   ;;
        'void:search_container')  error 'Поиск контейнера не был запущен!'     ;;
        'remove_containers')      error 'Контейнер не был удален!'             ;;
        'remove_images')          error 'Образ не был удален!'                 ;;
        'copy_temp_files')        error 'Временные файлы не были скопированы!' ;;
        'build')                  error 'Новый образ не был создан!'           ;;
        'remove_temp_files')      error 'Временные файлы не были удалены!'     ;;
        'void:search_image')      error 'Образ не найден!'                     ;;
        'download')               error 'Образ не был скачан!'                 ;;
        'remove_ports')           error 'Список портов не был удален!'         ;;
        'run')                    error 'Контейнер не был запущен!'            ;;
        'void:get_ports')         error 'Список портов не был получен!'        ;;
        'save_ports')             error 'Список портов не был сохранен!'       ;;
        'save_ports_count')       error 'Количество портов не было сохранено!' ;;
        'save_image')             error 'Текущий образ не был сохранен!'       ;;
    esac
    ;;
    
#┌──────────────────────────────────────────┐
#│ Выводит сообщение об успешном завершении │
#└──────────────────────────────────────────┘
    'success') case "$SELECTION" in
         4) view:Docker "Образ '$IMAGE_NAME' успешно создан!"                 ;;
         5) success     "Образ '$IMAGE_NAME' успешно удален!"                 ;;
         6) view:Docker "Контейнер '$IMAGE_RUN' успешно запущен!"             ;;
         7) view:Docker "Контейнер '$IMAGE_RUN' успешно перезагружен!"        ;;
         8) view:Docker "Контейнер '$IMAGE_RUN' успешно обновлен!"            ;;
         9) view:Docker "Контейнер '$IMAGE_RUN' успешно запущен!"             ;;
        10) success     "Контейнер '$RUN_IMAGE:$RUN_VERSION' успешно удален!" ;;
        11) success     'Все контейнеры успешно удалены!'                     ;;
        12) success     'Все образы успешно удалены!'                         ;;
    esac
    ;;
    
#┌────────────────────────┐
#│ Выводит URL-контейнера │
#└────────────────────────┘
    *) [ -n "$PORT" ] && success "$@" "http://localhost:$PORT/" || success "$@" ;;
esac
}
