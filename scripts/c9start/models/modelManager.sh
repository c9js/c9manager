#▄──────────────────────────────▄
#█                              █
#█  Model: Manager              █
#█  • Запуск проектов (логика)  █
#█                              █
#▀──────────────────────────────▀
model:Manager() { case "$1" in
#┌────────────────────────────────────────────────┐
#│ Обрабатывает выбранный пункт (список проектов) │
#└────────────────────────────────────────────────┘
    'list:Pick')
    # Сохраняем имя текущего проекта
        PROJECT_NAME="${PROJECTS_NAME[${PROJECTS[$PAGES_ID]}]}"
        
    # Получаем информацию о проекте
        if controller:Project 'get:Info'; then
        # Переходим к выбранному проекту
            nav:Next 'select:Project'
            return
        fi
        
    # Возвращаем пользователя обратно к списку проектов
        pages:Back
    ;;
    
#┌───────────────────────────────────────────┐
#│ Получает список пунктов (список проектов) │
#└───────────────────────────────────────────┘
    'list:Load')
    # Получаем список проектов
        runner "${PROJECTS_LIST[@]}"
    ;;
    
#┌──────────────────────────────────────────┐
#│ Создает список пунктов (список проектов) │
#└──────────────────────────────────────────┘
    'list:Menu')
    # Информация о списке пунктов
        local count="$(pages:Count $PROJECTS_MAX)" # Количество пунктов
        local skip="$(pages:Skip $PROJECTS_MAX)"   # Пропущенные пункты
        
    # Создаем список проектов
        PROJECTS=(
            "${PROJECTS_INDEX[@]:$skip:$count}" # Список порядковых номеров
        )
        
    # Локальные переменные
        local indent_last=0 # Отступ перед последней колонкой
        local max_status=0  # Самый длинный статус
        local max_name=0    # Самое длинное имя
        local i             # Порядковый номер
        
    # Проходим по списку проектов
        for i in "${PROJECTS[@]:0:$count-1}"; do
        # Получаем отступ перед последней колонкой
            [ ${#PROJECTS_URL[$i]} != 0 ] && indent_last=2
            
        # Получаем самый длинный статус
            (( ${#PROJECTS_STATUS[$i]} > $max_status )) && max_status=${#PROJECTS_STATUS[$i]}
            
        # Получаем самое длинное имя
            (( ${#PROJECTS_NAME[$i]} > $max_name )) && max_name=${#PROJECTS_NAME[$i]}
        done
        
    # Локальные переменные
        local items=() # Список пунктов
        local options  # Список параметров
        
    # Проходим по списку проектов
        for i in "${PROJECTS[@]}"; do
        # Создаем список параметров
            options=(
                "$max_name"              # Самое длинное имя
                "${PROJECTS_NAME[$i]}"   # Имя проекта
                "$max_status"            # Самый длинный статус
                "${PROJECTS_STATUS[$i]}" # Текущий статус
                "$indent_last"           # Отступ перед последней колонкой
                ''                       # Пустая строка для добавления отступов (пробелов)
                "${PROJECTS_URL[$i]}"    # URL-адрес
            )
            
        # Проверяем выбранный проект
            if [ "${PROJECTS_NAME[$i]}" == "$PROJECT_NAME" ]; then
                items+=("$(printf '{i}. %-*s  %-*s%*s%s{selected}' "${options[@]}")")
            else
                items+=("$(printf '{i}. %-*s  %-*s%*s%s' "${options[@]}")")
            fi
        done
        
    # Создаем список пунктов
        pages:Items "$PROJECTS_MAX" "${items[@]}"
    ;;
    
#┌───────────────────────────────────────────────┐
#│ Выходит из списка пунктов (изменение позиции) │
#└───────────────────────────────────────────────┘
    'move:Exit')
    # Получаем информацию о проекте
        if controller:Project 'get:Info'; then
        # Переходим к выбранному проекту
            nav:Next 'select:Position'
            return
        fi
        
    # Возвращаем пользователя обратно к списку проектов
        pages:Back
    ;;
    
#┌──────────────────────────────────────────────────┐
#│ Обрабатывает выбранный пункт (изменение позиции) │
#└──────────────────────────────────────────────────┘
    'move:Pick')
    # Сохраняем имя текущего проекта
        PROJECT_NAME="${PROJECTS_NAME[${PROJECTS[$PAGES_ID]}]}"
        
    # Изменяем позицию в списке
        runner "${PROJECTS_EDIT[@]}"
        
    # Обновляем список проектов
        pages:Back
    ;;
    
#┌─────────────────────────────────────────────┐
#│ Получает список пунктов (изменение позиции) │
#└─────────────────────────────────────────────┘
    'move:Load')
    # Получаем список для изменения позиции
        runner "${PROJECTS_MOVE[@]}"
    ;;
    
#┌────────────────────────────────────────────┐
#│ Создает список пунктов (изменение позиции) │
#└────────────────────────────────────────────┘
    'move:Menu')
    # Информация о списке пунктов
        local count="$(pages:Count $PROJECTS_MAX)" # Количество пунктов
        local skip="$(pages:Skip $PROJECTS_MAX)"   # Пропущенные пункты
        
    # Создаем список проектов
        PROJECTS=(
            "${PROJECTS_INDEX[@]:$skip:$count}" # Список порядковых номеров
        )
        
    # Локальные переменные
        local items=() # Список пунктов
        local i        # Порядковый номер
        
    # Проходим по списку проектов
        for i in "${PROJECTS[@]}"; do
        # Проверяем выбранный проект
            if [ "${PROJECTS_NAME[$i]}" == "$PROJECT_NAME" ]; then
                items+=("{i}. ${PROJECTS_NAME[$i]}{selected}")
            else
                items+=("{i}. ${PROJECTS_NAME[$i]}")
            fi
        done
        
    # Создаем список пунктов
        pages:Items "$PROJECTS_MAX" "${items[@]}"
    ;;
    
#┌──────────────────────────────────────────────┐
#│ Выходит из списка пунктов (изменение образа) │
#└──────────────────────────────────────────────┘
    'image:Exit')
    # Получаем информацию о проекте
        if controller:Project 'get:Info'; then
        # Переходим к выбранному проекту
            nav:Next 'select:Project'
            return
        fi
        
    # Возвращаем пользователя обратно к списку образов
        pages:Back
    ;;
    
#┌─────────────────────────────────────────────────┐
#│ Обрабатывает выбранный пункт (изменение образа) │
#└─────────────────────────────────────────────────┘
    'image:Pick')
    # Сохраняем новый образ
        PROJECT_IMAGE_NEW="${IMAGES[$PAGES_ID]}"
        
    # Изменяем текущий образ
        if controller:Project 'edit:Image'; then
        # Переходим к выбранному проекту
            nav:Next 'select:Project'
            return
        fi
        
    # Возвращаем пользователя обратно к списку образов
        pages:Back
    ;;
    
#┌────────────────────────────────────────────┐
#│ Получает список пунктов (изменение образа) │
#└────────────────────────────────────────────┘
    'image:Load')
    # Получаем список образов
        runner "${IMAGES_LIST[@]}"
    ;;
    
#┌───────────────────────────────────────────┐
#│ Создает список пунктов (изменение образа) │
#└───────────────────────────────────────────┘
    'image:Menu')
    # Информация о списке пунктов
        local count="$(pages:Count $IMAGES_MAX)" # Количество пунктов
        local skip="$(pages:Skip $IMAGES_MAX)"   # Пропущенные пункты
        
    # Создаем список образов
        IMAGES=(
            "${IMAGES_MANAGER[@]:$skip:$count}"
        )
    
    # Локальные переменные
        local indent_last=0 # Отступ перед последней колонкой
        local max_image=0   # Самый длинный образ
        local image         # Текущий образ
        
    # Проходим по списку образов
        for image in "${IMAGES[@]:0:$count-1}"; do
        # Получаем отступ перед последней колонкой
            [ "$image" == "$PROJECT_IMAGE" ] && indent_last=2
            
        # Получаем самое длинное имя
            (( ${#image} > $max_image )) && max_image=${#image}
        done
        
    # Локальные переменные
        local items=() # Список пунктов
        local options  # Список параметров
        
    # Проходим по списку образов
        for image in "${IMAGES[@]}"; do
        # Создаем список параметров
            options=(
                "$max_image"   # Самый длинный образ
                "$image"       # Текущий образ
                "$indent_last" # Отступ перед последней колонкой
                ''             # Пустая строка для добавления отступов (пробелов)
            )
            
        # Проверяем выбранный образ
            if [ "$image" == "$PROJECT_IMAGE" ]; then
                # items+=("$(printf '{i}. %-*s%*s(текущий){selected}' "${options[@]}")")
                items+=("{i}. $image (текущий){selected}")
            else
                # items+=("$(printf '{i}. %-*s%*s' "${options[@]}")")
                items+=("{i}. $image")
            fi
        done
        
    # Создаем список пунктов
        pages:Items "$IMAGES_MAX" "${items[@]}"
    ;;
    
#┌───────────────────────────────────────────┐
#│ Создает список пунктов (изменение образа) │
#└───────────────────────────────────────────┘
    'image:Menu')
    # Информация о списке пунктов
        local count="$(pages:Count $IMAGES_MAX)" # Количество пунктов
        local skip="$(pages:Skip $IMAGES_MAX)"   # Пропущенные пункты
        
    # Создаем список образов
        IMAGES=(
            "${IMAGES_MANAGER[@]:$skip:$count}"
        )
        
    # Локальные переменные
        local items=() # Список пунктов
        local image    # Текущий образ
        
    # Проходим по списку образов
        for image in "${IMAGES[@]}"; do
        # Проверяем выбранный образ
            if [ "$image" == "$PROJECT_IMAGE" ]; then
                items+=("{i}. $image (текущий){selected}")
            else
                items+=("{i}. $image")
            fi
        done
        
    # Создаем список пунктов
        pages:Items "$IMAGES_MAX" "${items[@]}"
    ;;
    
#┌─────────────────────────────────────────────┐
#│ Обрабатывает выбранный пункт (новый проект) │
#└─────────────────────────────────────────────┘
    'add:Pick')
    # Обнуляем старое имя
        PROJECT_NAME=''
        
    # Предлагаем пользователю указать имя проекта
        navigator 'name:Project'
        
    # Сохраняем имя проекта
        PROJECT_NAME_NEW="$REPLY"
        
    # Проверяем существует-ли проект с таким именем
        if controller:Project 'is:Name'; then
        # Запускаем новый контейнер
            controller:Docker 'run' "${IMAGES[$PAGES_ID]}" "$PROJECT_NAME_NEW"
        fi
        
    # Возвращаем пользователя обратно к списку образов
        pages:Back
    ;;
    
#┌───────────────────────────────────────┐
#│ Создает список пунктов (новый проект) │
#└───────────────────────────────────────┘
    'add:Menu')
    # Информация о списке пунктов
        local count="$(pages:Count $IMAGES_MAX)" # Количество пунктов
        local skip="$(pages:Skip $IMAGES_MAX)"   # Пропущенные пункты
        
    # Создаем список образов
        IMAGES=(
            "${IMAGES_MANAGER[@]:$skip:$count}"
        )
        
    # Локальные переменные
        local items=() # Список пунктов
        local image    # Текущий образ
        
    # Проходим по списку образов
        for image in "${IMAGES[@]}"; do
        # Добавляем пункт с информацией об образе
            items+=("{i}. $image")
        done
        
    # Создаем список пунктов
        pages:Items "$IMAGES_MAX" "${items[@]}"
    ;;
esac
}
