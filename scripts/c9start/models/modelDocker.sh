#▄────────────────────▄
#█                    █
#█  Model: Docker     █
#█  • Докер (логика)  █
#█                    █
#▀────────────────────▀
model:Docker() { case "$1" in
#┌───────────────────────────────┐
#│ Проверяет существует-ли образ │
#└───────────────────────────────┘
    'no_image')
        ! docker:isImage "$IMAGE_RUN"
    ;;
    
#┌───────────────────────────────────┐
#│ Проверяет существует-ли контейнер │
#└───────────────────────────────────┘
    'no_container')
    # Получаем информацию о запущенном контейнере
        docker:containerInfo "$WORKSPACE"
        
    # Контейнер не найден
        [ -z "$RUN_IMAGE" ]
    ;;
    
#┌───────────────────────────┐
#│ Запускает новый контейнер │
#└───────────────────────────┘
    'run')
    # Сохраняем выбранный порт
        PORT1="$2"
        
    # Поиск только системных образов
        IMAGES_SEARCH=(
            "${IMAGES_BUILD[@]}" # Список образов для сборки
            "${IMAGES_HUB[@]}"   # Список образов для hub.docker.com
        )
        
    # Сохраняем общее количество шагов для прогресс
        DOCKER_FULL="${#STOP_LIST[*]}"
        
    # Выполняем список команд
        runner "${RUN_LIST[@]}"
    ;;
    
#┌─────────────────────────────────────┐
#│ Удаляет только системные контейнеры │
#└─────────────────────────────────────┘
    'stop')
    # Поиск только системных образов
        IMAGES_SEARCH=(
            "${IMAGES_BUILD[@]}" # Список образов для сборки
            "${IMAGES_HUB[@]}"   # Список образов для hub.docker.com
        )
        
    # Сохраняем общее количество шагов для прогресс
        DOCKER_FULL="${#STOP_LIST[*]}"
        
    # Выполняем список команд
        runner "${STOP_LIST[@]}"
    ;;
    
#┌────────────────────────┐
#│ Удаляет все контейнеры │
#└────────────────────────┘
    'stop_all')
    # Поиск всех образов
        IMAGES_SEARCH=('')
        
    # Сохраняем общее количество шагов для прогресс
        DOCKER_FULL="${#STOP_LIST[*]}"
        
    # Выполняем список команд
        runner "${STOP_LIST[@]}"
    ;;
    
#┌────────────────────┐
#│ Удаляет все образы │
#└────────────────────┘
    'remove_all')
    # Поиск всех образов
        IMAGES_SEARCH=('')
        
    # Сохраняем общее количество шагов для прогресс
        DOCKER_FULL="${#REMOVE_LIST[*]}"
        
    # Выполняем список команд
        runner "${REMOVE_LIST[@]}"
    ;;
esac
}
