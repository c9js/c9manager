#▄───────────────────────────────▄
#█                               █
#█  Model: Project               █
#█  • Выбранный проект (логика)  █
#█                               █
#▀───────────────────────────────▀
model:Project() { case "$1" in
#┌───────────────────────────────┐
#│ Получает информацию о проекте │
#└───────────────────────────────┘
    'get:Info')
    # Сохраняем выбранный вариант
        SELECTION=1
        
    # Получаем информацию о проекте
        runner "${PROJECT_INFO[@]}"
    ;;
    
#┌───────────────────────────────────────────────┐
#│ Проверяет существует-ли проект с таким именем │
#└───────────────────────────────────────────────┘
    'is:Name')
    # Сохраняем выбранный вариант
        SELECTION=2
        
    # Проверяем существует-ли проект с таким именем
        runner "${PROJECT_ISNAME[@]}"
    ;;
    
#┌────────────────────────┐
#│ Переименовывает проект │
#└────────────────────────┘
    'edit:Name')
    # Сохраняем выбранный вариант
        SELECTION=3
        
    # Предлагаем пользователю указать новое имя
        navigator 'name:Project'
        
    # Проверяем новое имя
        if [ "$PROJECT_NAME" != "$REPLY" ]; then
        # Сохраняем новое имя
            PROJECT_NAME_NEW="$REPLY"
            
        # Переименовываем проект
            if runner "${PROJECT_RENAME[@]}"; then
            # Сохраняем новое имя
                PROJECT_NAME="$PROJECT_NAME_NEW"
            fi
        fi
        
    # Возвращаем пользователя обратно к выбранному проекту
        nav:Next 'select:Project'
    ;;
    
#┌───────────────────────────────────────────┐
#│ Изменяет количество дополнительных портов │
#└───────────────────────────────────────────┘
    'edit:Ports')
    # Сохраняем выбранный вариант
        SELECTION=4
        
    # Предлагаем пользователю указать количество дополнительных портов
        navigator 'ports:Project'
        
    # Сохраняем новое количество дополнительных портов
        PROJECT_PORTS_COUNT_NEW="$REPLY"
        
    # Изменяем количество дополнительных портов
        if runner "${PROJECT_PORTS[@]}"; then
        # Сохраняем новое количество дополнительных портов
            PROJECT_PORTS_COUNT="$PROJECT_PORTS_COUNT_NEW"
        fi
        
    # Возвращаем пользователя обратно к выбранному проекту
        nav:Next 'select:Ports'
    ;;
    
#┌────────────────────────┐
#│ Изменяет текущий образ │
#└────────────────────────┘
    'edit:Image')
    # Сохраняем выбранный вариант
        SELECTION=5
        
    # Изменяем текущий образ
        if runner "${IMAGES_EDIT[@]}"; then
        # Сохраняем новый образ
            PROJECT_IMAGE="$PROJECT_IMAGE_NEW"
        fi
    ;;
    
#┌──────────────────────────────────┐
#│ Переключает состояние контейнера │
#└──────────────────────────────────┘
    'toggle:State')
    # Список параметров
        local options
        
    # Запускаем новый контейнер
        if [ "$PROJECT_STATUS" == 'offline' ]; then
            options=(
                'start'                # Запуск нового контейнера
                "$PROJECT_IMAGE"       # Имя образа
                "$PROJECT_NAME"        # Имя проекта
                "$PROJECT_VERSION"     # Версия образа
                "$PROJECT_PORTS_COUNT" # Количество дополнительных портов
            )
        fi
        
    # Удаляем старый контейнер
        if [ "$PROJECT_STATUS" == 'online' ]; then
            options=(
                'stop'          # Удаление старого контейнера
                "$PROJECT_NAME" # Имя проекта
            )
        fi
        
    # Выполняем список команд
        controller:Docker "${options[@]}"
        
    # Получаем информацию о проекте
        model:Project 'get:Info'
        
    # Возвращаем пользователя обратно к выбранному проекту
        nav:Next 'select:Project'
    ;;
esac
}
