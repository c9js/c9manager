#▄────────────────────────────▄
#█                            █
#█  Model: Build              █
#█  • Сборка образа (логика)  █
#█                            █
#▀────────────────────────────▀
model:Build() { case "$1" in
#┌──────────────────────────────────────────────┐
#│ Создает список пунктов (для выбранного меню) │
#└──────────────────────────────────────────────┘
    'pages:Menu')
    # Получаем количество пропущенных пунктов
        local skip="$(pages:Skip $IMAGES_MAX)"
        
    # Получаем количество получаемых пунктов
        local count="$(pages:Count $IMAGES_MAX)"
        
    # Получаем список образов
        IMAGES_LIST=(
            "${IMAGES_BUILD[@]:$skip:$count}" # Список образов для сборки
        )
        
    # Локальные переменные
        local items=() # Список пунктов (для выбранного меню)
        local image    # Информация об образе
        
    # Проходим по списку образов
        for image in "${IMAGES_LIST[@]}"; do
        # Добавляем пункт с информацией (для выбранного меню)
            case "$PAGES_MENU" in
                1) items+=("{i}. $image") ;; # Создать новый образ
                2) items+=("{i}. $image") ;; # Удалить старый образ
            esac
        done
        
    # Создаем список пунктов (для выбранного меню)
        pages:Items "$IMAGES_MAX" "${items[@]}"
    ;;
    
#┌────────────────────────────────────────────────────┐
#│ Обрабатывает выбранный пункт (для выбранного меню) │
#└────────────────────────────────────────────────────┘
    'pages:Pick')
    # Выполняем список команд (для выбранного меню)
        case "$PAGES_MENU" in
            1) controller:Docker 'create' "${IMAGES_LIST[$PAGES_ID]}" ;; # Создать новый образ
            2) controller:Docker 'remove' "${IMAGES_LIST[$PAGES_ID]}" ;; # Удалить старый образ
        esac
        
    # Возвращаем пользователя обратно в меню
        pages:Back
    ;;
esac
}
