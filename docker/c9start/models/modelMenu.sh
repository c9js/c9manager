#▄───────────────────▄
#█                   █
#█  Model: Menu      █
#█  • Меню (логика)  █
#█                   █
#▀───────────────────▀
model:Menu() { case "$1" in
#┌────────────────────────────────────────────────────────┐
#│ Команда: Stop                                          │
#│ • Останавливает и удаляет контейнеры из списка $IMAGES │
#└────────────────────────────────────────────────────────┘
    'stop')
    # Останавливаем и удаляем контейнеры из списка $IMAGES
        controller:Docker 'stop' 'view status'
        
    # Выводим сообщение об успешном завершении
        success "Контейнеры '$RUN_IMAGE:$RUN_VERSION' были остановлены!"
    ;;
    
#┌──────────────────────────────────────────┐
#│ Команда: Stop all                        │
#│ • Останавливает и удаляет все контейнеры │
#└──────────────────────────────────────────┘
    'stop_all')
    # Останавливаем и удаляет все контейнеры
        controller:Docker 'stop_all' 'view status'
        
    # Выводим сообщение об успешном завершении
        success 'Все контейнеры были остановлены и удалены!'
    ;;
    
#┌──────────────────────┐
#│ Команда: Remove all  │
#│ • Удаляет все образы │
#└──────────────────────┘
    'remove_all')
    # Удаляем все образы
        controller:Docker 'remove_all' 'view status'
        
    # Выводим сообщение об успешном завершении
        success \
        'Все контейнеры были остановлены и удалены!' \
        'Образы также были удалены!'
    ;;
    
#┌─────────────────────────────┐
#│ Команда: Run                │
#│ • Запускает новый контейнер │
#└─────────────────────────────┘
    'run')
    # Останавливаем и удаляем контейнеры из списка $IMAGES
        controller:Docker 'stop' 'view status'
        
    # Обновляем текущий статус
        view 'status' \
           5 'Запуск контейнера...'
           
    # Скачиваем образ
        if controller:Docker 'download'; then
        # Образ не был скачан
            error "Что-то не так в 'docker pull ...'"
            return 1
        fi
        
    # Запускаем новый контейнер
        ERROR_LOG=$(controller:Docker 'start' "$2")
        
    # Контейнер не был запущен
        if (( $? == 1 )); then
        # Выводим сообщение со списком ошибок
            error "Что-то не так в 'docker run ...'"
            return 1
        fi
        
    # Контейнер успешно запущен
        return 0
    ;;
    
#┌─────────────────────────────┐
#│ Команды: Install, Start     │
#│ • Запускает новый контейнер │
#└─────────────────────────────┘
    'install' |'start')
    # Запускаем новый контейнер
        if model:Menu 'run' "$2"; then
        # Выводим сообщение об успешном завершении
            success \
            "Контейнер '$IMAGE_RUN:$VERSION' успешно запущен!" \
            "http://localhost:$2/"
        fi
    ;;
    
#┌────────────────────────────────┐
#│ Команды: Restart               │
#│ • Перезагружет новый контейнер │
#└────────────────────────────────┘
    'restart')
    # Запускаем новый контейнер
        if model:Menu 'run' "$2"; then
        # Выводим сообщение об успешном завершении
            success \
            "Контейнер '$IMAGE_RUN:$VERSION' успешно перезагружен!" \
            "http://localhost:$2/"
        fi
    ;;
    
#┌────────────────────────────────────────────────────┐
#│ Проверяет верно-ли указано имя файла для ssh-ключа │
#└────────────────────────────────────────────────────┘
    'is_valid_ssh')
    # Проверяем верно-ли указано имя файла (совпадает с именем git-юзера)
        if ! git:isValidUser "$2"; then
            echo "Имя файла '%s' указано не верно!"
            return 1
        fi
        
    # Проверяем существует-ли файл или каталог с именем ssh-ключа
        if controller:Request 'is_key' "$2"; then
            echo "Файл или каталог с именем '%s' уже существует!"
            return 1
        fi
        
    # Имя файла указано верно
        return 0
    ;;
    
#┌──────────────────────────┐
#│ Команда: SSH-Keygen      │
#│ • Создает новый ssh-ключ │
#└──────────────────────────┘
    'ssh_keygen')
    # Обновляем текущий статус
        view 'status' \
           1 "Проверяем каталог '${CD}${SEP}$SSH_DIR'"
           
    # Проверяем существует-ли файл с именем "ssh"
        if controller:Request 'is_ssh'; then
        # Выводим сообщение об ошибке
            error \
            'Каталог не найден!' \
            "Путь: ${CD}${SEP}$SSH_DIR"
            return
        fi
        
    # Обновляем текущий статус
        view 'status' \
           2 'Генерируем новый ssh-ключ...'
           
    # Создаем новый ssh-ключ
        if controller:Request 'ssh_keygen' "$2"; then
        # SSH-ключ не был создан
            error "Что-то не так в 'ssh-keygen ...'"
            return
        fi
        
    # Выводим сообщение об успешном завершении
        success \
        'Новый ssh-ключ успешно создан!' \
        "${CD}${SEP}${SSH_DIR}${SEP}$2" \
        "${CD}${SEP}${SSH_DIR}${SEP}$2.pub"
    ;;
    
#┌─────────────────────────┐
#│ Команда: Gitclone       │
#│ • Клонирует репозиторий │
#└─────────────────────────┘
    'gitclone')
    # Обновляем текущий статус
        view 'status' \
           1 "Проверяем каталог '$CD'"
           
    # Текущий каталог пуст
        if controller:Request 'current_dir_is_empty'; then
        # Обновляем текущий статус
            view 'status' \
               2 'Клонируем репозиторий...'
               
        # Клонируем репозиторий
            if controller:Request 'gitclone'; then
            # Репозиторий не был склонирован
                error "Что-то не так в 'git clone ...'"
                return
            fi
            
        # Проверяем наличие образа
            if ! controller:Docker 'no_image'; then
            # Выводим сообщение об успешном завершении
                success \
                'Локальный репозиторий успешно создан!' \
                "Путь: $CD"
                
        # Образ не найден
            else
            # Выводим сообщение об успешном завершении
                success \
                'Локальный репозиторий успешно создан!' \
                "Путь: $CD" \
                '' \
                "Далее необходимо установить '$IMAGE_RUN:$VERSION'" \
                "Нажмите 'Install'"
            fi
        fi
    ;;
esac
}
