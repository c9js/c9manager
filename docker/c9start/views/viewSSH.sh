#▄────────────────────────────────────────▄
#█                                        █
#█  Список команд для создания SSH-ключа  █
#█                                        █
#▀────────────────────────────────────────▀
SSH_LIST=(
    'check_dir'  # Проверяет SSH-каталог
    'check_key'  # Проверяет SSH-ключ
    'ssh_keygen' # Создает новый SSH-ключ
)

#▄──────────────────────────▄
#█                          █
#█  View: SSH               █
#█  • SSH-ключ (интерфейс)  █
#█                          █
#▀──────────────────────────▀
view:SSH() { case "$1" in
#┌─────────────────────┐
#│ Обновляет заголовок │
#└─────────────────────┘
    'header')
        printf "Создание SSH-ключа '%s'" "$NEW_SSH_KEY"
    ;;
    
#┌─────────────────────────────────────┐
#│ Обновляет текущее состояние команды │
#└─────────────────────────────────────┘
    'state') case "$2" in
        'check_dir')  log 'Проверяем SSH-каталог...'  ;;
        'check_key')  log 'Проверяем SSH-ключ...'     ;;
        'ssh_keygen') log 'Создаем новый SSH-ключ...' ;;
    esac
    ;;
    
#┌─────────────────────────────┐
#│ Выводит сообщение об ошибке │
#└─────────────────────────────┘
    'error') case "$2" in
        'check_dir')  error 'Каталог не найден!'       "Путь: $CD_SSH_DIR"  ;;
        'check_key')  error "SSH-ключ уже существует!" "Путь: $CD_SSH_FILE" ;;
        'ssh_keygen') error 'SSH-ключ не был создан!'                       ;;
    esac
    ;;
    
#┌──────────────────────────────────────────┐
#│ Выводит сообщение об успешном завершении │
#└──────────────────────────────────────────┘
    'success')
        success \
        'Новый SSH-ключ успешно создан!' \
        "$CD_SSH_FILE" \
        "$CD_SSH_FILE.pub"
    ;;
esac
}
